{"version":3,"sources":["../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["getChildMapping","children","mapFn","result","Object","create","Children","map","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","self","ReferenceError","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","createElement","TransitionGroupContext","Provider","value","propTypes","defaultProps","ComicsList","useState","comics","setComics","offset","setOffset","setnewItemLoading","ComicEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","clearError","useEffect","getComics","initial","then","onComicLoaded","newComics","ended","items","arr","item","CSSTransition","timeout","classNames","className","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","onClick","style","ComicsPage","AppBanner","Error","img","display","width","height","objectFit","margin","setLoading","setError","request","useCallback","url","a","method","body","headers","fetch","response","json","data","message","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharactres","res","results","_transformCharacter","getCharacter","_transformComics","getComic","getCharacterByName","name","char","descr","description","slice","homepage","urls","path","extension","wiki","pageCount","language","textObjects","prices","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/7.ec3cec68.chunk.js","sourcesContent":["import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import './comicsList.scss';\nimport useMarvelService from '../../services/MarvelService';\nimport React,{useState,useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { CSSTransition,TransitionGroup  } from 'react-transition-group';\nconst ComicsList = () => {\n    const [comics,setComics] = useState([])\n    const [offset,setOffset] = useState(7891)\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [ComicEnded,setComicsEnded] = useState(false)\n    const {loading,error,clearError,getAllComics} =  useMarvelService()\n    useEffect(()=>{\n        getComics(offset, true);\n    },[]);\n\n    const getComics = (offset, initial) =>{\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n        .then(onComicLoaded)\n    }\n\n    const onComicLoaded = (newComics) =>{\n        let ended = false;\n        if(newComics.length < 8){\n            ended = true\n        }\n        setComics([...comics,...newComics])\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended)\n    }\n    function renderItems(arr) {\n        const items =  arr.map((item,i) => {\n            return (\n                <CSSTransition  timeout={500} classNames=\"my-node\">\n                    <li className=\"comics__item\" key={item.id}>\n                        <Link to={`/Marvelapi/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}$</div>\n                        </Link>\n                    </li>\n                </CSSTransition>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n                \n            </ul>\n        )\n    }\n    const items = renderItems(comics);\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    return (\n        <div className=\"comics__list\">\n                {items}\n                {spinner}\n                {errorMessage}\n            <button \n            onClick={()=>getComics(offset)}\n            style={{'display' : ComicEnded ? 'none' : 'block'}}\n            className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () =>{\r\n    return (\r\n        <>\r\n            <AppBanner></AppBanner>\r\n            <ComicsList></ComicsList>\r\n         </>\r\n  \r\n    )\r\n};\r\nexport default ComicsPage","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst Error =  () =>{\r\n    return(\r\n        <img src={img}  style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}></img>\r\n    )\r\n}\r\nexport default Error;","import {useHttp} from '../hooks/http.hook'\r\n\r\nconst  useMarvelService = () => {\r\n\r\n   const {loading,error,clearError,request} = useHttp();\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = 'apikey=0803ac54e9aa8cbbe036f1c7b3b3d1c0'\r\n    const _baseOffset = 210;\r\n\r\n\r\n     const getAllCharactres = async (offset = _baseOffset) =>{\r\n      const res =  await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformCharacter)\r\n     }\r\n\r\n     const getCharacter = async (id) =>{\r\n       const res =  await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n       return _transformCharacter(res.data.results[0])\r\n    }\r\n    const getAllComics = async (offset = _baseOffset) =>{\r\n      const res  = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformComics)\r\n    };\r\n    const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n      return _transformComics(res.data.results[0]);\r\n  }\r\nconst getCharacterByName = async (name) => {\r\n   const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n   return res.data.results.map(_transformCharacter);\r\n}\r\n    const _transformCharacter = (char) =>{\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         descr: char.description ? char.description.slice(0,220) + '...': 'description not found',\r\n         homepage: char.urls[0].url,\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         wiki: char.urls[1].url,\r\n         comics:  char.comics.items ? char.comics.items.slice(0,9) : 'comics not found'\r\n      }\r\n    }\r\n    const _transformComics = (comics) =>{\r\n         return {\r\n            id: comics.id,\r\n            title:comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices[0].price ?  comics.prices[0].price : 'not pricing',\r\n            url:comics.urls[0].url\r\n         }\r\n   };\r\n    return {\r\n       loading,error,getAllCharactres,getCharacter,clearError,getAllComics,getComic,getCharacterByName\r\n    }\r\n }\r\n\r\n export default useMarvelService;","import {useState,useCallback} from 'react'\r\n\r\nexport const useHttp = () =>{\r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n   \r\n    const request = useCallback(async (url,method = 'GET',body = null,headers = {'Content-Type': 'application/json'}) =>{\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url,{method,body,headers});\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return(data);\r\n        }\r\n        catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n             \r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(()=>{\r\n        setError(null)\r\n    },[])\r\n    return {loading,error,clearError,request}\r\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}