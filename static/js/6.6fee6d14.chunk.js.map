{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/pages/SingleComicsPage.js"],"names":["Error","src","img","style","display","width","height","objectFit","margin","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","json","data","message","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharactres","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","descr","description","slice","homepage","urls","thumbnail","path","extension","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","comic","load","setLoad","timeout","classNames","in","className","alt","to","onClick","SingleComicsPage","comicID","useParams","setComic","loadComic","useEffect","updateComic","then","onComicLoaded","errorMessage","spinner","content"],"mappings":"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","file":"static/js/6.6fee6d14.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst Error =  () =>{\r\n    return(\r\n        <img src={img}  style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}></img>\r\n    )\r\n}\r\nexport default Error;"," import {useHttp} from '../hooks/http.hook'\r\n\r\nconst  useMarvelService = () => {\r\n\r\n   const {loading,error,clearError,request} = useHttp();\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    const _apiKey = 'apikey=0803ac54e9aa8cbbe036f1c7b3b3d1c0'\r\n    const _baseOffset = 210;\r\n\r\n\r\n     const getAllCharactres = async (offset = _baseOffset) =>{\r\n      const res =  await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformCharacter)\r\n     }\r\n\r\n     const getCharacter = async (id) =>{\r\n       const res =  await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n       return _transformCharacter(res.data.results[0])\r\n    }\r\n    const getAllComics = async (offset = _baseOffset) =>{\r\n      const res  = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n      return res.data.results.map(_transformComics)\r\n    };\r\n    const getComic = async (id) => {\r\n      const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n      return _transformComics(res.data.results[0]);\r\n  }\r\n    const _transformCharacter = (char) =>{\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         descr: char.description ? char.description.slice(0,220) + '...': 'description not found',\r\n         homepage: char.urls[0].url,\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         wiki: char.urls[1].url,\r\n         comics:  char.comics.items ? char.comics.items.slice(0,9) : 'comics not found'\r\n      }\r\n    }\r\n    const _transformComics = (comics) =>{\r\n         return {\r\n            id: comics.id,\r\n            title:comics.title,\r\n            description: comics.description || 'There is no description',\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices[0].price ?  comics.prices[0].price : 'not pricing',\r\n            url:comics.urls[0].url\r\n         }\r\n   };\r\n    return {\r\n       loading,error,getAllCharactres,getCharacter,clearError,getAllComics,getComic\r\n    }\r\n }\r\n\r\n export default useMarvelService;","import {useState,useCallback} from 'react'\r\n\r\nexport const useHttp = () =>{\r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n   \r\n    const request = useCallback(async (url,method = 'GET',body = null,headers = {'Content-Type': 'application/json'}) =>{\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url,{method,body,headers});\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return(data);\r\n        }\r\n        catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n             \r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(()=>{\r\n        setError(null)\r\n    },[])\r\n    return {loading,error,clearError,request}\r\n};","import './singleComic.scss';\r\nimport {useParams,Link} from 'react-router-dom'\r\nimport Error from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner'\r\nimport React,{useState,useEffect} from 'react';\r\nimport { CSSTransition  } from 'react-transition-group';\r\nimport useMarvelService from '../../services/MarvelService';\r\nconst SingleComicsPage = () => {\r\n    const {comicID} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n    const [loadComic,setLoad] = useState(false)\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicID])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicID)\r\n            .then(onComicLoaded)\r\n    }\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n        setLoad(true)\r\n    }\r\n    const errorMessage = error ? <Error/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}  load={loadComic} setLoad={setLoad}/> : null;\r\n    return (\r\n        <>\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n        </>\r\n    )\r\n}\r\nconst View = ({comic,load,setLoad}) =>{\r\n    const {title,description,pageCount,thumbnail,language,price} = comic;\r\n    return (\r\n        <CSSTransition timeout={500} classNames=\"my-comic\" in={load}>\r\n        <div className=\"single-comic\">\r\n        <img src={thumbnail} alt=\"x-men\" className=\"single-comic__img\"/>\r\n        <div className=\"single-comic__info\">\r\n            <h2 className=\"single-comic__name\">{title}</h2>\r\n            <p className=\"single-comic__descr\">{description}</p>\r\n            <p className=\"single-comic__descr\">{pageCount} pages</p>\r\n            <p className=\"single-comic__descr\">Language: {language}</p>\r\n            <div className=\"single-comic__price\">{price}$</div>\r\n        </div>\r\n        <Link to='/Marvelapi/comics' className=\"single-comic__back\" onClick={()=>setLoad(false)}>Back to all</Link>\r\n    </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default SingleComicsPage;"],"sourceRoot":""}